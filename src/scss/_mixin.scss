/*
* Mixin
*/

@mixin break-word {
  word-break: keep-all;
  word-wrap: break-word;
}

@mixin full-layer() {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

@mixin a11y {
  position: absolute !important;
  overflow: hidden;
  height: 1px;
  width: 1px;
  white-space: nowrap;
  clip: rect(0 0 0 0);
}

@mixin icon-arrow($pseudo: 'before', $dir: null, $size: null, $thin: null, $color: null) {
  #{'&:' + $pseudo} {
    content: '';
    display: block;
    width: if($size, $size + rem, null);
    height: if($size, $size + rem, null);
    border-width: if($thin, $thin + rem, null);
    border-top-style: solid;
    border-right-style: solid;
    border-color: if($color, $color, null);

    @if ($dir == 'up') {
      transform: translate3d(0, -50%, 0) rotate(-45deg);
    } @else if ($dir == 'left') {
      transform: translate3d(0, -50%, 0) rotate(-135deg);
    } @else if ($dir == 'right') {
      transform: translate3d(0, -50%, 0) rotate(45deg);
    } @else {
      transform: translate3d(0, -50%, 0) rotate(135deg);
    }

    @content;
  }
}

@mixin container($size: null) {
  padding-left: $pad-small;
  padding-right: $pad-small;

  @include mq(large) {
    margin-left: auto;
    margin-right: auto;

    @if ($size) {
      padding-left: percentage($pad-large/$size);
      padding-right: percentage($pad-large/$size);
      max-width: $size;
    } @else {
      padding-left: percentage($pad-large/$w-medium);
      padding-right: percentage($pad-large/$w-medium);
      max-width: $w-medium;
    }
  }
}

@mixin transition($prop: null, $time: null, $func: null) {
  @if ($prop) {
    transition-property: $prop;
  } @else {
    transition-property: all;
  }

  @if ($time) {
    transition-duration: $time;
  } @else {
    transition-duration: $dur;
  }

  @if ($func) {
    transition-timing-function: $func;
  } @else {
    transition-timing-function: $ease-basic;
  }
}

@mixin typeface($level: null, $weight: null) {
  @if ($weight) {
    font-weight: $weight;
  }
  font-size: if($level, $level, $font-contents);
  line-height: if($level, 1.5, (2.2/1.4));
}

@mixin ellipsis($lines: null) {
  @if ($lines) {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    text-overflow: ellipsis;
    word-wrap: normal;
  } @else {
    overflow: hidden;
    display: inline-block;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
  }
}

@mixin middle($child: '&-cell') {
  white-space: nowrap;

  #{$child} {
    display: inline-block;
    vertical-align: middle;
    white-space: normal;
    @content;
  }

  &:after {
    content: '';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
  }
}

@mixin mobile {
  @media screen and (max-width: $mobile-max-width) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: $desktop-min-width) {
    @content;
  }
}
